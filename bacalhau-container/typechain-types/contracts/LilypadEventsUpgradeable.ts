/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace LilypadEventsUpgradeable {
  export type LilypadJobResultStruct = {
    requestor: PromiseOrValue<string>;
    id: PromiseOrValue<BigNumberish>;
    success: PromiseOrValue<boolean>;
    result: PromiseOrValue<string>;
    resultType: PromiseOrValue<BigNumberish>;
  };

  export type LilypadJobResultStructOutput = [
    string,
    BigNumber,
    boolean,
    string,
    number
  ] & {
    requestor: string;
    id: BigNumber;
    success: boolean;
    result: string;
    resultType: number;
  };

  export type LilypadJobStruct = {
    requestor: PromiseOrValue<string>;
    id: PromiseOrValue<BigNumberish>;
    spec: PromiseOrValue<string>;
    resultType: PromiseOrValue<BigNumberish>;
  };

  export type LilypadJobStructOutput = [string, BigNumber, string, number] & {
    requestor: string;
    id: BigNumber;
    spec: string;
    resultType: number;
  };
}

export interface LilypadEventsUpgradeableInterface extends utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "LILYPAD_FEE()": FunctionFragment;
    "UPGRADER_ROLE()": FunctionFragment;
    "fetchAllJobs()": FunctionFragment;
    "fetchAllResults()": FunctionFragment;
    "fetchJobsByAddress(address)": FunctionFragment;
    "getContractBalance()": FunctionFragment;
    "getEscrowAddress()": FunctionFragment;
    "getEsrowMinAutoPay()": FunctionFragment;
    "getLilypadFee()": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "initialize()": FunctionFragment;
    "lilypadJobHistory(uint256)": FunctionFragment;
    "lilypadJobResultHistory(uint256)": FunctionFragment;
    "proxiableUUID()": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "returnLilypadError(address,uint256,string)": FunctionFragment;
    "returnLilypadResults(address,uint256,uint8,string)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "runLilypadJob(address,string,uint8)": FunctionFragment;
    "setEscrowMinAutoPay(uint256)": FunctionFragment;
    "setEscrowWalletAddress(address)": FunctionFragment;
    "setLilypadFee(uint256)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "upgradeTo(address)": FunctionFragment;
    "upgradeToAndCall(address,bytes)": FunctionFragment;
    "withdrawBalanceToEscrowAddress()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DEFAULT_ADMIN_ROLE"
      | "LILYPAD_FEE"
      | "UPGRADER_ROLE"
      | "fetchAllJobs"
      | "fetchAllResults"
      | "fetchJobsByAddress"
      | "getContractBalance"
      | "getEscrowAddress"
      | "getEsrowMinAutoPay"
      | "getLilypadFee"
      | "getRoleAdmin"
      | "grantRole"
      | "hasRole"
      | "initialize"
      | "lilypadJobHistory"
      | "lilypadJobResultHistory"
      | "proxiableUUID"
      | "renounceRole"
      | "returnLilypadError"
      | "returnLilypadResults"
      | "revokeRole"
      | "runLilypadJob"
      | "setEscrowMinAutoPay"
      | "setEscrowWalletAddress"
      | "setLilypadFee"
      | "supportsInterface"
      | "upgradeTo"
      | "upgradeToAndCall"
      | "withdrawBalanceToEscrowAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LILYPAD_FEE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UPGRADER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "fetchAllJobs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "fetchAllResults",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "fetchJobsByAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEsrowMinAutoPay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLilypadFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lilypadJobHistory",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "lilypadJobResultHistory",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "returnLilypadError",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "returnLilypadResults",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "runLilypadJob",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setEscrowMinAutoPay",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setEscrowWalletAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setLilypadFee",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeTo",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawBalanceToEscrowAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LILYPAD_FEE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UPGRADER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fetchAllJobs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fetchAllResults",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fetchJobsByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEsrowMinAutoPay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLilypadFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lilypadJobHistory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lilypadJobResultHistory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "returnLilypadError",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "returnLilypadResults",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "runLilypadJob",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEscrowMinAutoPay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEscrowWalletAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLilypadFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upgradeTo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawBalanceToEscrowAddress",
    data: BytesLike
  ): Result;

  events: {
    "AdminChanged(address,address)": EventFragment;
    "BeaconUpgraded(address)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "LilypadEscrowPaid(address,uint256)": EventFragment;
    "LilypadJobResultsReturned(tuple)": EventFragment;
    "NewLilypadJobSubmitted(tuple)": EventFragment;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
    "Upgraded(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BeaconUpgraded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LilypadEscrowPaid"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LilypadJobResultsReturned"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewLilypadJobSubmitted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Upgraded"): EventFragment;
}

export interface AdminChangedEventObject {
  previousAdmin: string;
  newAdmin: string;
}
export type AdminChangedEvent = TypedEvent<
  [string, string],
  AdminChangedEventObject
>;

export type AdminChangedEventFilter = TypedEventFilter<AdminChangedEvent>;

export interface BeaconUpgradedEventObject {
  beacon: string;
}
export type BeaconUpgradedEvent = TypedEvent<
  [string],
  BeaconUpgradedEventObject
>;

export type BeaconUpgradedEventFilter = TypedEventFilter<BeaconUpgradedEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface LilypadEscrowPaidEventObject {
  arg0: string;
  arg1: BigNumber;
}
export type LilypadEscrowPaidEvent = TypedEvent<
  [string, BigNumber],
  LilypadEscrowPaidEventObject
>;

export type LilypadEscrowPaidEventFilter =
  TypedEventFilter<LilypadEscrowPaidEvent>;

export interface LilypadJobResultsReturnedEventObject {
  result: LilypadEventsUpgradeable.LilypadJobResultStructOutput;
}
export type LilypadJobResultsReturnedEvent = TypedEvent<
  [LilypadEventsUpgradeable.LilypadJobResultStructOutput],
  LilypadJobResultsReturnedEventObject
>;

export type LilypadJobResultsReturnedEventFilter =
  TypedEventFilter<LilypadJobResultsReturnedEvent>;

export interface NewLilypadJobSubmittedEventObject {
  job: LilypadEventsUpgradeable.LilypadJobStructOutput;
}
export type NewLilypadJobSubmittedEvent = TypedEvent<
  [LilypadEventsUpgradeable.LilypadJobStructOutput],
  NewLilypadJobSubmittedEventObject
>;

export type NewLilypadJobSubmittedEventFilter =
  TypedEventFilter<NewLilypadJobSubmittedEvent>;

export interface RoleAdminChangedEventObject {
  role: string;
  previousAdminRole: string;
  newAdminRole: string;
}
export type RoleAdminChangedEvent = TypedEvent<
  [string, string, string],
  RoleAdminChangedEventObject
>;

export type RoleAdminChangedEventFilter =
  TypedEventFilter<RoleAdminChangedEvent>;

export interface RoleGrantedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleGrantedEvent = TypedEvent<
  [string, string, string],
  RoleGrantedEventObject
>;

export type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;

export interface RoleRevokedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleRevokedEvent = TypedEvent<
  [string, string, string],
  RoleRevokedEventObject
>;

export type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;

export interface UpgradedEventObject {
  implementation: string;
}
export type UpgradedEvent = TypedEvent<[string], UpgradedEventObject>;

export type UpgradedEventFilter = TypedEventFilter<UpgradedEvent>;

export interface LilypadEventsUpgradeable extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LilypadEventsUpgradeableInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    LILYPAD_FEE(overrides?: CallOverrides): Promise<[BigNumber]>;

    UPGRADER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    fetchAllJobs(
      overrides?: CallOverrides
    ): Promise<[LilypadEventsUpgradeable.LilypadJobStructOutput[]]>;

    fetchAllResults(
      overrides?: CallOverrides
    ): Promise<[LilypadEventsUpgradeable.LilypadJobResultStructOutput[]]>;

    fetchJobsByAddress(
      _requestor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[LilypadEventsUpgradeable.LilypadJobResultStructOutput[]]>;

    getContractBalance(overrides?: CallOverrides): Promise<[BigNumber]>;

    getEscrowAddress(overrides?: CallOverrides): Promise<[string]>;

    getEsrowMinAutoPay(overrides?: CallOverrides): Promise<[BigNumber]>;

    getLilypadFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    lilypadJobHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, number] & {
        requestor: string;
        id: BigNumber;
        spec: string;
        resultType: number;
      }
    >;

    lilypadJobResultHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, boolean, string, number] & {
        requestor: string;
        id: BigNumber;
        success: boolean;
        result: string;
        resultType: number;
      }
    >;

    proxiableUUID(overrides?: CallOverrides): Promise<[string]>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    returnLilypadError(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _errorMsg: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    returnLilypadResults(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _resultType: PromiseOrValue<BigNumberish>,
      _result: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    runLilypadJob(
      _from: PromiseOrValue<string>,
      _spec: PromiseOrValue<string>,
      _resultType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setEscrowMinAutoPay(
      _minAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setEscrowWalletAddress(
      _escrowAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setLilypadFee(
      _newFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    upgradeTo(
      newImplementation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    upgradeToAndCall(
      newImplementation: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawBalanceToEscrowAddress(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  LILYPAD_FEE(overrides?: CallOverrides): Promise<BigNumber>;

  UPGRADER_ROLE(overrides?: CallOverrides): Promise<string>;

  fetchAllJobs(
    overrides?: CallOverrides
  ): Promise<LilypadEventsUpgradeable.LilypadJobStructOutput[]>;

  fetchAllResults(
    overrides?: CallOverrides
  ): Promise<LilypadEventsUpgradeable.LilypadJobResultStructOutput[]>;

  fetchJobsByAddress(
    _requestor: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<LilypadEventsUpgradeable.LilypadJobResultStructOutput[]>;

  getContractBalance(overrides?: CallOverrides): Promise<BigNumber>;

  getEscrowAddress(overrides?: CallOverrides): Promise<string>;

  getEsrowMinAutoPay(overrides?: CallOverrides): Promise<BigNumber>;

  getLilypadFee(overrides?: CallOverrides): Promise<BigNumber>;

  getRoleAdmin(
    role: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  grantRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  hasRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  initialize(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  lilypadJobHistory(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string, number] & {
      requestor: string;
      id: BigNumber;
      spec: string;
      resultType: number;
    }
  >;

  lilypadJobResultHistory(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, boolean, string, number] & {
      requestor: string;
      id: BigNumber;
      success: boolean;
      result: string;
      resultType: number;
    }
  >;

  proxiableUUID(overrides?: CallOverrides): Promise<string>;

  renounceRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  returnLilypadError(
    _to: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BigNumberish>,
    _errorMsg: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  returnLilypadResults(
    _to: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BigNumberish>,
    _resultType: PromiseOrValue<BigNumberish>,
    _result: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  revokeRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  runLilypadJob(
    _from: PromiseOrValue<string>,
    _spec: PromiseOrValue<string>,
    _resultType: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setEscrowMinAutoPay(
    _minAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setEscrowWalletAddress(
    _escrowAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setLilypadFee(
    _newFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  upgradeTo(
    newImplementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  upgradeToAndCall(
    newImplementation: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawBalanceToEscrowAddress(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    LILYPAD_FEE(overrides?: CallOverrides): Promise<BigNumber>;

    UPGRADER_ROLE(overrides?: CallOverrides): Promise<string>;

    fetchAllJobs(
      overrides?: CallOverrides
    ): Promise<LilypadEventsUpgradeable.LilypadJobStructOutput[]>;

    fetchAllResults(
      overrides?: CallOverrides
    ): Promise<LilypadEventsUpgradeable.LilypadJobResultStructOutput[]>;

    fetchJobsByAddress(
      _requestor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<LilypadEventsUpgradeable.LilypadJobResultStructOutput[]>;

    getContractBalance(overrides?: CallOverrides): Promise<BigNumber>;

    getEscrowAddress(overrides?: CallOverrides): Promise<string>;

    getEsrowMinAutoPay(overrides?: CallOverrides): Promise<BigNumber>;

    getLilypadFee(overrides?: CallOverrides): Promise<BigNumber>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initialize(overrides?: CallOverrides): Promise<void>;

    lilypadJobHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, number] & {
        requestor: string;
        id: BigNumber;
        spec: string;
        resultType: number;
      }
    >;

    lilypadJobResultHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, boolean, string, number] & {
        requestor: string;
        id: BigNumber;
        success: boolean;
        result: string;
        resultType: number;
      }
    >;

    proxiableUUID(overrides?: CallOverrides): Promise<string>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    returnLilypadError(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _errorMsg: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    returnLilypadResults(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _resultType: PromiseOrValue<BigNumberish>,
      _result: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    runLilypadJob(
      _from: PromiseOrValue<string>,
      _spec: PromiseOrValue<string>,
      _resultType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setEscrowMinAutoPay(
      _minAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setEscrowWalletAddress(
      _escrowAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setLilypadFee(
      _newFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    upgradeTo(
      newImplementation: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    upgradeToAndCall(
      newImplementation: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawBalanceToEscrowAddress(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "AdminChanged(address,address)"(
      previousAdmin?: null,
      newAdmin?: null
    ): AdminChangedEventFilter;
    AdminChanged(
      previousAdmin?: null,
      newAdmin?: null
    ): AdminChangedEventFilter;

    "BeaconUpgraded(address)"(
      beacon?: PromiseOrValue<string> | null
    ): BeaconUpgradedEventFilter;
    BeaconUpgraded(
      beacon?: PromiseOrValue<string> | null
    ): BeaconUpgradedEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "LilypadEscrowPaid(address,uint256)"(
      arg0?: null,
      arg1?: null
    ): LilypadEscrowPaidEventFilter;
    LilypadEscrowPaid(arg0?: null, arg1?: null): LilypadEscrowPaidEventFilter;

    "LilypadJobResultsReturned(tuple)"(
      result?: null
    ): LilypadJobResultsReturnedEventFilter;
    LilypadJobResultsReturned(
      result?: null
    ): LilypadJobResultsReturnedEventFilter;

    "NewLilypadJobSubmitted(tuple)"(
      job?: null
    ): NewLilypadJobSubmittedEventFilter;
    NewLilypadJobSubmitted(job?: null): NewLilypadJobSubmittedEventFilter;

    "RoleAdminChanged(bytes32,bytes32,bytes32)"(
      role?: PromiseOrValue<BytesLike> | null,
      previousAdminRole?: PromiseOrValue<BytesLike> | null,
      newAdminRole?: PromiseOrValue<BytesLike> | null
    ): RoleAdminChangedEventFilter;
    RoleAdminChanged(
      role?: PromiseOrValue<BytesLike> | null,
      previousAdminRole?: PromiseOrValue<BytesLike> | null,
      newAdminRole?: PromiseOrValue<BytesLike> | null
    ): RoleAdminChangedEventFilter;

    "RoleGranted(bytes32,address,address)"(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleGrantedEventFilter;
    RoleGranted(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleGrantedEventFilter;

    "RoleRevoked(bytes32,address,address)"(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleRevokedEventFilter;
    RoleRevoked(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleRevokedEventFilter;

    "Upgraded(address)"(
      implementation?: PromiseOrValue<string> | null
    ): UpgradedEventFilter;
    Upgraded(
      implementation?: PromiseOrValue<string> | null
    ): UpgradedEventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    LILYPAD_FEE(overrides?: CallOverrides): Promise<BigNumber>;

    UPGRADER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    fetchAllJobs(overrides?: CallOverrides): Promise<BigNumber>;

    fetchAllResults(overrides?: CallOverrides): Promise<BigNumber>;

    fetchJobsByAddress(
      _requestor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractBalance(overrides?: CallOverrides): Promise<BigNumber>;

    getEscrowAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getEsrowMinAutoPay(overrides?: CallOverrides): Promise<BigNumber>;

    getLilypadFee(overrides?: CallOverrides): Promise<BigNumber>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    lilypadJobHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lilypadJobResultHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proxiableUUID(overrides?: CallOverrides): Promise<BigNumber>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    returnLilypadError(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _errorMsg: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    returnLilypadResults(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _resultType: PromiseOrValue<BigNumberish>,
      _result: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    runLilypadJob(
      _from: PromiseOrValue<string>,
      _spec: PromiseOrValue<string>,
      _resultType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setEscrowMinAutoPay(
      _minAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setEscrowWalletAddress(
      _escrowAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setLilypadFee(
      _newFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    upgradeTo(
      newImplementation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    upgradeToAndCall(
      newImplementation: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawBalanceToEscrowAddress(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LILYPAD_FEE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UPGRADER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fetchAllJobs(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fetchAllResults(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fetchJobsByAddress(
      _requestor: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContractBalance(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEscrowAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEsrowMinAutoPay(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLilypadFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    lilypadJobHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lilypadJobResultHistory(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proxiableUUID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    returnLilypadError(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _errorMsg: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    returnLilypadResults(
      _to: PromiseOrValue<string>,
      _jobId: PromiseOrValue<BigNumberish>,
      _resultType: PromiseOrValue<BigNumberish>,
      _result: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    runLilypadJob(
      _from: PromiseOrValue<string>,
      _spec: PromiseOrValue<string>,
      _resultType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setEscrowMinAutoPay(
      _minAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setEscrowWalletAddress(
      _escrowAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setLilypadFee(
      _newFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    upgradeTo(
      newImplementation: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    upgradeToAndCall(
      newImplementation: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawBalanceToEscrowAddress(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
