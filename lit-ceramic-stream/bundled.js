globalThis.require=e=>{if(e==="ethers")return ethers;throw new Error("unknown module "+e)};function r(e){return ethers.utils.keccak256(ethers.utils.toUtf8Bytes(e))}var n=async e=>{let s="https://w3s.link/ipfs/"+e;return await fetch(s).then(t=>t.text())},i=async()=>{let ethAddress=ethers.utils.computeAddress(publicKey);if(!adapterId)throw new Error("adapterId is required");let code=await n("QmTtHUUeHVWqpwC83k1ZBAjm93GQzD5HHE9iwd9hFxaiFn"),tvl=await eval(code),currentTime=Math.floor(new Date().getTime()/1e3),response={runner:authSig.address,tvl,timestamp:currentTime},responseHash=ethers.utils.toUtf8String(ethers.utils.toUtf8Bytes(r(JSON.stringify(response)))),sigShare=await LitActions.ethPersonalSignMessageEcdsa({message:responseHash,publicKey,sigName});Lit.Actions.setResponse({response:JSON.stringify({ethAddress,response,responseHash})})};i();
